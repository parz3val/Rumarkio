{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/handlers.rs","byte_start":11289,"byte_end":11299,"line_start":287,"line_end":287,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":50,"highlight_end":60}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3918,"byte_end":3928,"line_start":125,"line_end":125,"column_start":32,"column_end":42,"is_primary":false,"text":[{"text":"        let mut futures = ( $( maybe_done($e), )* );","highlight_start":32,"highlight_end":42}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`, which is required by `Vec<{async block@src/handlers.rs:227:28: 285:22}>: IntoFuture`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"Vec<{async block@src/handlers.rs:227:28: 285:22}> must be a future or must implement `IntoFuture` to be awaited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Vec<{async block@src/handlers.rs:227:28: 285:22}>` to implement `IntoFuture`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `maybe_done`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":838,"byte_end":848,"line_start":26,"line_end":26,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"pub fn maybe_done<F: IntoFuture>(future: F) -> MaybeDone<F::IntoFuture> {","highlight_start":22,"highlight_end":32}],"label":"required by this bound in `maybe_done`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`, which is required by `Vec<{async block@src/handlers.rs:227:28: 285:22}>: IntoFuture`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: Vec<{async block@src/handlers.rs:227:28: 285:22}> must be a future or must implement `IntoFuture` to be awaited\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Vec<{async block@src/handlers.rs:227:28: 285:22}>` to implement `IntoFuture`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `maybe_done`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:26:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn maybe_done<F: IntoFuture>(future: F) -> MaybeDone<F::IntoFuture> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `maybe_done`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3918,"byte_end":3932,"line_start":125,"line_end":125,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"        let mut futures = ( $( maybe_done($e), )* );","highlight_start":32,"highlight_end":46}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5699,"byte_end":5717,"line_start":169,"line_end":169,"column_start":44,"column_end":62,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":62}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5699,"byte_end":5722,"line_start":169,"line_end":169,"column_start":44,"column_end":67,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":67}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5785,"byte_end":5797,"line_start":172,"line_end":172,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"                    if fut.as_mut().poll(cx).is_pending() {","highlight_start":24,"highlight_end":36}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `poll` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5798,"byte_end":5802,"line_start":172,"line_end":172,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"                    if fut.as_mut().poll(cx).is_pending() {","highlight_start":37,"highlight_end":41}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":24152,"byte_end":24461,"line_start":758,"line_end":770,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis enum $ident $($def_generics)*","highlight_start":9,"highlight_end":43},{"text":"        $(where","highlight_start":1,"highlight_end":16},{"text":"            $($where_clause)*)?","highlight_start":1,"highlight_end":32},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(#[$variant_attrs])*","highlight_start":1,"highlight_end":38},{"text":"                $variant $({","highlight_start":1,"highlight_end":29},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $field: $field_ty","highlight_start":1,"highlight_end":42},{"text":"                    ),+","highlight_start":1,"highlight_end":24},{"text":"                })?","highlight_start":1,"highlight_end":20},{"text":"            ),+","highlight_start":1,"highlight_end":16},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11646,"byte_end":11922,"line_start":418,"line_end":425,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_reconstruct! {","highlight_start":9,"highlight_end":45},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52232,"byte_end":53482,"line_start":1627,"line_end":1661,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11100,"byte_end":11133,"line_start":403,"line_end":403,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_reconstruct!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":23029,"byte_end":23067,"line_start":719,"line_end":719,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_reconstruct {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13443,"byte_end":13539,"line_start":398,"line_end":398,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`\nwhich is required by `tokio::future::maybe_done::MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>: std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `poll` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`\u001b[0m\n\u001b[0m            which is required by `tokio::future::maybe_done::MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>: std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `tokio::try_join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5895,"byte_end":5907,"line_start":174,"line_end":174,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"                    } else if fut.as_mut().output_mut().expect(\"expected completed future\").is_err() {","highlight_start":31,"highlight_end":43}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `output_mut` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":5908,"byte_end":5918,"line_start":174,"line_end":174,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"                    } else if fut.as_mut().output_mut().expect(\"expected completed future\").is_err() {","highlight_start":44,"highlight_end":54}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13443,"byte_end":13539,"line_start":398,"line_end":398,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `output_mut` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `tokio::try_join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `take_output` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":6013,"byte_end":6024,"line_start":175,"line_end":175,"column_start":46,"column_end":57,"is_primary":true,"text":[{"text":"                        return Ready(Err(fut.take_output().expect(\"expected completed future\").err().unwrap()))","highlight_start":46,"highlight_end":57}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13443,"byte_end":13539,"line_start":398,"line_end":398,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `take_output` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `tokio::try_join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":6682,"byte_end":6700,"line_start":193,"line_end":193,"column_start":44,"column_end":62,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":62}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":6682,"byte_end":6705,"line_start":193,"line_end":193,"column_start":44,"column_end":67,"is_primary":true,"text":[{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":44,"highlight_end":67}],"label":"`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tokio::future::maybe_done::MaybeDone`","code":null,"level":"note","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":414,"byte_end":423,"line_start":14,"line_end":14,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":14,"highlight_end":23}],"label":"required by a bound in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52612,"byte_end":52627,"line_start":1637,"line_end":1637,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `MaybeDone`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":48578,"byte_end":48810,"line_start":1504,"line_end":1511,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$proj_replace_ident]","highlight_start":1,"highlight_end":34},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47536,"byte_end":47768,"line_start":1464,"line_end":1471,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$proj_mut_ident]","highlight_start":1,"highlight_end":30},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs","byte_start":182,"byte_end":776,"line_start":8,"line_end":23,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    /// A future that may have completed.","highlight_start":1,"highlight_end":42},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    #[project = MaybeDoneProj]","highlight_start":1,"highlight_end":31},{"text":"    #[project_replace = MaybeDoneProjReplace]","highlight_start":1,"highlight_end":46},{"text":"    #[repr(C)] // https://github.com/rust-lang/miri/issues/3780","highlight_start":1,"highlight_end":64},{"text":"    pub enum MaybeDone<Fut: Future> {","highlight_start":1,"highlight_end":38},{"text":"        /// A not-yet-completed future.","highlight_start":1,"highlight_end":40},{"text":"        Future { #[pin] future: Fut },","highlight_start":1,"highlight_end":39},{"text":"        /// The output of the completed future.","highlight_start":1,"highlight_end":48},{"text":"        Done { output: Fut::Output },","highlight_start":1,"highlight_end":38},{"text":"        /// The empty variant after the result of a [`MaybeDone`] has been","highlight_start":1,"highlight_end":75},{"text":"        /// taken using the [`take_output`](MaybeDone::take_output) method.","highlight_start":1,"highlight_end":76},{"text":"        Gone,","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Vec<{async block@src/handlers.rs:227:28: 285:22}>` is not a future\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::future::Future` is not implemented for `Vec<{async block@src/handlers.rs:227:28: 285:22}>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio::future::maybe_done::MaybeDone`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/future/maybe_done.rs:8:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// A future that may have completed.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[project = MaybeDoneProj]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum MaybeDone<Fut: Future> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `MaybeDone`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `take_output` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":6730,"byte_end":6759,"line_start":195,"line_end":196,"column_start":21,"column_end":26,"is_primary":false,"text":[{"text":"                    fut","highlight_start":21,"highlight_end":24},{"text":"                        .take_output()","highlight_start":1,"highlight_end":26}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":6759,"byte_end":6770,"line_start":196,"line_end":196,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"                        .take_output()","highlight_start":26,"highlight_end":37}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7089,"byte_end":7163,"line_start":208,"line_end":208,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":7243,"byte_end":7281,"line_start":214,"line_end":214,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/handlers.rs","byte_start":11272,"byte_end":11300,"line_start":287,"line_end":287,"column_start":33,"column_end":61,"is_primary":false,"text":[{"text":"                if let Err(e) = tokio::try_join!(my_futures).await {","highlight_start":33,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"tokio::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/home/lyminox/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13443,"byte_end":13539,"line_start":398,"line_end":398,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `_: Future`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `take_output` exists for struct `Pin<&mut MaybeDone<Vec<{async block@src/handlers.rs:227:28: 285:22}>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/handlers.rs:287:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Err(e) = tokio::try_join!(my_futures).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/lyminox/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vec<{async block@src/handlers.rs:227:28: 285:22}>: std::future::Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::try_join` which comes from the expansion of the macro `tokio::try_join` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 12 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 12 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
